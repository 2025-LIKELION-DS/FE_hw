//맞은 개수 : 4개
//수고하셨습니다!!

---------------------------------------------------
Q1. 1번 - x
=> 2번
- div의 텍스트 내용을 바꾸는 코드인 textContent가 들어가야 한다
- textContent는 요소의 텍스트만 읽고 쓰는 DOM 메소드이다.

---------------------------------------------------
Q2. console.log - x
=> includes
- 문제를 잘못 이해함.특정 요소가 배열 안에 있는지 확인하는 메소드가 필요함
- .includes: 특정 문자가 포함되어 있는지 확인하는 메소드
          : True, False로 값을 반환

---------------------------------------------------
Q3. num % 2 == 0 - x
=> num % 2 === 0
- [===] 은 타입과 값이 모두 같아야 True를 반환함
- == 을 사용한다면 타입이 달라도 자동으로 변환하여 비교하기 때문에 정확한 비교가 되지 않는다. 

---------------------------------------------------
Q4. 3000 - o
Q5. appendChild - o

---------------------------------------------------
Q6. x
=> textContent = count
- 1이 증가할 때마다 display의 텍스트가 변경되어야 함으로 textContent를 사용하여 텍스트를 업데이트 해주어야 한다.

---------------------------------------------------
Q7. - o
const lion = () => { 
 console.log(“자바스크립트 마스터를 해보자!”);
}

lion();

---------------------------------------------------
Q8. - x
isLogin == True? alert("환영합니다!") : alert("접근 권한이 없습니다.");
=> isLogin ? alert("환영합니다!") : alert("접근 권한이 없습니다.");
- 삼항연산자에 true를 사용하려면 대문자가 아닌 소문자 true를 사용해야 한다.
- 하지만, 이미 isLogin이 true르 정의되어있기 때문에 true를 생략한 isLogin만 조건 부분에 넣어도 된다.

---------------------------------------------------
Q9. - x
do{
    const name = prompt("무엇을 말하고 싶나요?");
    } while(name === "끝")

=>=>=> 수정
let name;  

do {
    name = prompt("무엇을 말하고 싶나요?");
} while (name !== "끝");

- 조건을 잘못 이해하였음.
- 끝을 입력하지 않을 때 반복적으로 알림창을 띄워야 함으로 while의 조건을 name !== "끝"으로 해주어야 한다.

---------------------------------------------------
Q10. - x
while(True){
    let num = prompt("숫자를 입력하세요");
    let numInt = Number(num);

    let sum = 0;

    for(let i=1; i<=num; i++){
        sum += i;
    }


    alert(`1부터 해당값까지의 합은 ${sum}입니다`);
}

=>=>=> 수정
while(true){
    let num = prompt("숫자를 입력하세요");
    let numInt = Number(num);

    if(numInt === 0){
        alert("프로그램을 종료합니다");
        break;
    }

    let sum = 0;

    for(let i=1; i<=numInt; i++){
        sum += i;
    }

    alert(`1부터 해당값까지의 합은 ${sum}입니다`);
}

- True가 아닌 true로
- while문을 종료해줘야 하기 때문에 break문을 넣기
- 반복문 사용시 형변환을 한 numInt를 사용해주어야 함

---------------------------------------------------
Q11. - x

function randomNum() {
    const num = Math.floor(Math.random() * 10) + 0;
    return Int(num);
}

let arr = [];
let sum = 0;

for(let i=0; i<3; i++){
    arr[i] = randomNum();
    sum += arr[i];
    // 화면 출력 
}

=>=>=> 수정
function randomNum() {
    const num = Math.floor(Math.random() * 10) + 0;
    return num;
}

let arr = [];
let sum = 0;

for(let i=0; i<3; i++){
    arr[i] = randomNum();
    sum += arr[i];
    document.write(`${i + 1}번째 랜덤 난수 : ${arr[i]}`);
}

document.write(`3개의 합 : ${sum}`);

- Math.는 이미 Number 형이기 때문에 형변환을 해줄 필요가 없다
- 화면에 출력하기 위해서는 document.write를 사용해야 한다.

---------------------------------------------------
Q12. - x
const arr1 = ["빨강", "주황", "노랑", "초록"];
const arr2 = ["파랑", "남색", "보라", "핑크"];

const arr3 = arr1.push(arr2);

console.log(arr3);

console.log(arr3[2]);

// console.log(arr3[3:: ])

=>=>=> 수정
const arr1 = ["빨강", "주황", "노랑", "초록"];
const arr2 = ["파랑", "남색", "보라", "핑크"];

const arr3 = arr1.concat(arr2);

console.log(arr3);

console.log(arr3[2]);

let result = [];

for (let i = 3; i <= 7; i++) {
  result.push(arr3[i]);
}
console.log(result);

- 배열을 연결하려면 concat를 사용해야하고 
push는 끝에 요소를 추가할 때 사용할 수 있다(현재 상황은 배열을 뒤에 합치는 것)
- 배열을 슬라이스 할 때는 silce()를 사용할 수도 있고 push와 for문을 사용하면 요소를 반복적으로 추가하여 특정 인덱스를 추출할 수도 있다.

---------------------------------------------------
Q13. - o
let date = "2025년 5월 2일";

console.log(date);

let now = new Date();

console.log(
  "오늘날짜: ",
  now.getFullYear(),
  "년",
  now.getMonth(),
  "월",
  now.getDate(),
  "일"
);

let diff = now.getDate() - 2;

console.log(`${date}로부터 ${diff}일이 지났습니다`);

---------------------------------------------------
Q14. - x
const textBtn = document.getElementById("name");

=>=>=> 수정
let count = 1;

function change(){
    count++;

    document.getElementById("name").innerText = "likelion_" + count;
}

- innerText는 HTML 요소 안의 텍스트 내용을 가져오거나 바꿀 때 사용하는 속성이다

---------------------------------------------------
Q15 - x
=>=>=> 수정
const name = prompt("이름을 입력하세요");
const age = prompt("나이를 입력하세요");


const person = {
hello: function() {
    alert("안녕, " + age + "살 " + name + " !!");
}
};

// 함수 실행
person.hello();

- 객체 person 안에 키인 hello가 배치되어 있는 것이고 hello의 function은 키의 값으로 할당된 함수이다.
