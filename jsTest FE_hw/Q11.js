/*Q. 조건에 맞춰 데이터를 화면에 출력하세요.
조건1: 0~10 까지의 랜덤 난수를 생성하는 함수 randomNum()을 만드세요.
조건2: arr배열에 3개의 랜덤 값을 함수를 통해 만든 후 화면에 출력해주세요.
조건3: 3개의 난수를 for문을 활용해 모두 합하여 화면에 출력.

for문 하나로 랜덤값 생성, 출력, 총합 연산 모두 수행
*/

//조건1
function randomNum() {
  return Math.floor(Math.random() * 10); //(Math.random)은 0~1보다 작은 실수, (Math.floor(~))은 ~의 소수점 이하를 제거한 정수 반환 이므로로
} //0~1 난수 *10 의 정수부분 반환: 1~10  을 num에 저장
//'3개의 랜덤 값을 함수를 통해 만든 후' 이므로 함수를 만들고 값을 리턴받아야함.
//함수 안에서 return은 그 자체로 끝나야 한다. return값을 변수에 저장하기 위해서는 해당 함수 밖에서 진행되어야함

let arr = []; //배열 리터럴 방식
let sum = 0; //총합 값 저장하는 변수 초기화

for (let i = 0; i < 3; i++) {
  let num = randomNum(); //여기서 함수의 결과를 num변수에 저장함!!!! 반복문 안에서 정의하는 이유는 매 반복마다 새로운 랜덤값을 생성하기 위함이다. 밖에 있으면 하나만 생성되고 값이 고정됨.(하나의 랜덤값 생성해서 그 값을 계속 사용해야 할 때)
  arr.push(num); //배열 추가. 맨뒤에 추가하기 위해 arr.push(추가할 요소) 사용함!
  sum += num;
  document.write(`${i}번째 랜덤 난수 : ${num}`);
}

document.write(`3개의 합 : ${sum}`); //sum에 저장된 총합 값을 출력

/*
0 <= Math.random() < 1
0 이상 1미만의 실수를 반환하기 때문에 1은 절대 나오지 않음.
Math.random 에 10을 곱하면 0*10 = 0 , 0.999..*10 = 9 이므로 0~9 까지 생성(Math.floor 사용)
0~10 까지 출력하기 위해서는 *11 해야함.  최대 (0.999...*11 =) 10.999.. 이므로 10 가능

1~10
	Math.floor(Math.random() * 11)+1
*/
